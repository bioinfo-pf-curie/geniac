.. _profiles-page:

************************************************
Config files for the different nextflow profiles
************************************************

Are detailed here the different config files that are automatically generated by the install process.

conda
=====

Are listed in the ``conda.config`` file only the tools available in conda.

::

   includeConfig 'process.config'
   
   conda { cacheDir = "${params.condaCacheDir}" }
   
   process {
       withLabel:trickySoftware { conda = "${baseDir}/environment.yml" }
       withLabel:rmarkdown { conda = "${baseDir}/environment.yml" }
       withLabel:fastqc { conda = "${baseDir}/environment.yml" }
   }


multiconda
==========

Are listed in the ``multiconda.config`` file only the tools available in conda.

::

   includeConfig 'process.config'
   
   conda { cacheDir = "${params.condaCacheDir}" }
   
   process {
       withLabel:fastqc { conda = "${params.geniac.tools.fastqc}" }
       withLabel:trickySoftware { conda = "${params.geniac.tools.trickySoftware}" }
       withLabel:rmarkdown { conda = "${params.geniac.tools.rmarkdown}" }
   }


singularity
===========

All the tools are listed in the ``singularity.config`` file.

::

   includeConfig 'process.config'
   
   singularity {
       enabled = true
       autoMounts = true
       runOptions = "${params.geniac.containers.singularityRunOptions}"
   }
   
   process {
       withLabel:alpine { container = "${params.geniac.containers.singularityImagePath}/alpine.simg" }
       withLabel:fastqc { container = "${params.geniac.containers.singularityImagePath}/fastqc.simg" }
       withLabel:onlyLinux { container = "${params.geniac.containers.singularityImagePath}/onlylinux.simg" }
       withLabel:rmarkdown { container = "${params.geniac.containers.singularityImagePath}/rmarkdown.simg" }
       withLabel:trickySoftware { container = "${params.geniac.containers.singularityImagePath}/trickysoftware.simg" }
       withLabel:helloWorld { container = "${params.geniac.containers.singularityImagePath}/helloworld.simg" }
   }

docker
======

All the tools are listed in the ``docker.config`` file.

::

   includeConfig 'process.config'
   
   docker {
       enabled = true
       runOptions = "${params.geniac.containers.dockerRunOptions}"
   }
   
   process {
       withLabel:alpine { container = "alpine" }
       withLabel:fastqc { container = "fastqc" }
       withLabel:onlyLinux { container = "onlylinux" }
       withLabel:rmarkdown { container = "rmarkdown" }
       withLabel:trickySoftware { container = "trickysoftware" }
       withLabel:helloWorld { container = "helloworld" }
   }

path
====

All the tools but ``onlyLinux`` are listed in the ``path.config`` file.

::

   includeConfig 'process.config'
   
   singularity {
     enable = false
   }
   
   docker {
     enable = false
   }
   
   process {
       withLabel:alpine { beforeScript = "export PATH=${baseDir}/../path/alpine/bin:$PATH" } 
       withLabel:fastqc { beforeScript = "export PATH=${baseDir}/../path/fastqc/bin:$PATH" } 
       withLabel:trickySoftware { beforeScript = "export PATH=${baseDir}/../path/trickySoftware/bin:$PATH" } 
       withLabel:rmarkdown { beforeScript = "export PATH=${baseDir}/../path/rmarkdown/bin:$PATH" } 
       withLabel:helloWorld { beforeScript = "export PATH=${baseDir}/../path/helloWorld/bin:$PATH" } 
   }


cluster
=======

::

   process {
     executor = 'pbs'
     queue = params.queue ?: null
   }

